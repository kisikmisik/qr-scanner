{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","result","infoMessage","handleScan","data","setState","handleError","err","console","error","sendQrCode","axios","post","cavcaToken","then","res","alert","setTimeout","className","this","delay","onError","onScan","facingMode","style","width","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRA+DeA,E,4MAzDbC,MAAQ,CACNC,OAAQ,YACRC,YAAa,uB,EAIfC,WAAa,SAAAC,GACPA,GAAQA,IAAS,EAAKJ,MAAMC,QAC9B,EAAKI,SAAS,CACZJ,OAAQG,K,EAKdE,YAAc,SAAAC,GACZC,QAAQC,MAAMF,I,EAGhBG,WAAa,WACP,EAAKV,MAAMI,KACbO,IAAMC,KAAN,iDAA6D,CAACC,WAAY,EAAKb,MAAMI,OACpFU,MAAK,SAAAC,GACJC,MAAM,oBAGR,EAAKX,SAAS,CACZH,YAAa,qBAEfe,YAAW,WAAK,EAAKZ,SAAS,CAACH,YAAa,0BAA0B,O,4CAK1E,WAAW,IAAD,OACR,OACE,sBAAKgB,UAAU,MAAf,UACA,wBAAQA,UAAU,aAAlB,SACE,4BAAKC,KAAKnB,MAAME,gBAElB,iCACA,cAAC,IAAD,CACIkB,MAAO,IACPC,QAASF,KAAKb,YACdgB,OAAQH,KAAKhB,WACboB,WAAY,cACZC,MAAO,CAAEC,MAAO,SAIlB,mBAAGP,UAAU,SAAb,SAAuBC,KAAKnB,MAAMC,QAAU,kBAC5C,wBAAQyB,QAAS,WAAO,EAAKhB,cAAeQ,UAAU,MAAtD,oC,GAnDUS,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cb8dc04c.chunk.js","sourcesContent":["import './App.css';\r\nimport QrReader from 'react-qr-reader'\r\nimport React from 'react'\r\nimport axios from 'axios';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    result: 'No result',\r\n    infoMessage: 'Scanning qr-code...'\r\n  }\r\n  \r\n\r\n  handleScan = data => {\r\n    if (data && data !== this.state.result) {\r\n      this.setState({\r\n        result: data,\r\n      })\r\n\r\n    }\r\n  }\r\n  handleError = err => {\r\n    console.error(err)\r\n  }\r\n\r\n  sendQrCode = () => {\r\n    if (this.state.data) {\r\n      axios.post(`http://hq.apps-garden.com:2345/api/cavca-token`, {cavcaToken: this.state.data})\r\n      .then(res => {\r\n        alert('QR-code sent')\r\n      })\r\n    } else {\r\n      this.setState({\r\n        infoMessage: \"No QR-code found\"\r\n      })\r\n      setTimeout(()=>{this.setState({infoMessage: 'Scanning qr-code...'})}, 5000)\r\n    }\r\n    \r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <p >{this.state.infoMessage}</p>\r\n      </header>\r\n      <main>\r\n      <QrReader\r\n          delay={300}\r\n          onError={this.handleError}\r\n          onScan={this.handleScan}\r\n          facingMode={'environment'}\r\n          style={{ width: '70%' }}\r\n          \r\n        />\r\n        \r\n        <p className=\"result\">{this.state.result || 'No result yet'}</p>\r\n        <button onClick={() => {this.sendQrCode()}} className=\"btn\">Send qr-code</button>\r\n      </main>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}